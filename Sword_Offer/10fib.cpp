#include"functions.h"


//写一个函数，输入 n ，求斐波那契（Fibonacci）数列的第 n 项（即 F(N)）。斐波那契数列的定义如下：
//F(0) = 0, F(1) = 1
//F(N) = F(N - 1) + F(N - 2), 其中 N > 1.
//斐波那契数列由 0 和 1 开始，之后的斐波那契数就是由之前的两数相加而得出。
//答案需要取模 1e9 + 7（1000000007），如计算初始结果为：1000000008，请返回 1。


// 以斐波那契数列性质 f(n + 1) = f(n) + f(n - 1)f(n+1)=f(n)+f(n−1) 为转移方程
//从计算效率、空间复杂度上看，动态规划是本题的最佳解法
int MOD = 1000000007;
int fib(int n) {
    if (n < 2)
        return n;
    int p = 0, q = 0, r = 1;
    for (int i = 2; i <= n; i++)
    {
        p = q;
        q = r;
        r = (p + q) % MOD;
    }
    return r;
    // return (fib(n - 1) + fib(n - 2))%MOD;
}